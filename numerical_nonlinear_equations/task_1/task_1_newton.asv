function res = task_1_newton(x,error_precision,error_max,iter_max,L,hq,g,v)
res = x;
no_of_iterations = 0;


while error_precision >= error_max && no_of_iterations <= iter_max
    func = (L*tan(x)) - (((L^2)*g)/2*v^2*(cos(x))^2) + hq;
    func_derivative = L*((sec(x))^2) - (L^2*g/2*v^2)*2*((sec(x))^2)*tan(x);
    y = x-(func/func_derivative);
    res =[xvals;y];                           
    error_precision=abs(y-x);                             
    x=y;
    no_of_iterations=no_of_iterations+1;                                 
end

